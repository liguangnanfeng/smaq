<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.web.dao.TModelMapper">
  <resultMap id="BaseResultMap" type="com.spring.web.model.TModel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="flag" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="part" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="industry_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="industry_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="cycle" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="next_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="next_check_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="memo" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="del" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="open" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="use_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, title, user_id, flag, type, part, industry_id, industry_type, cycle, next_time, 
    next_check_time, memo, del, open, use_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_model_tbl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_model_tbl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.spring.web.model.TModel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_model_tbl (title, user_id, flag, 
      type, part, industry_id, 
      industry_type, cycle, next_time, 
      next_check_time, memo, del, 
      open, use_time, create_time
      )
    values (#{title,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{part,jdbcType=VARCHAR}, #{industryId,jdbcType=INTEGER}, 
      #{industryType,jdbcType=INTEGER}, #{cycle,jdbcType=INTEGER}, #{nextTime,jdbcType=TIMESTAMP}, 
      #{nextCheckTime,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR}, #{del,jdbcType=INTEGER}, 
      #{open,jdbcType=INTEGER}, #{useTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spring.web.model.TModel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_model_tbl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="part != null">
        part,
      </if>
      <if test="industryId != null">
        industry_id,
      </if>
      <if test="industryType != null">
        industry_type,
      </if>
      <if test="cycle != null">
        cycle,
      </if>
      <if test="nextTime != null">
        next_time,
      </if>
      <if test="nextCheckTime != null">
        next_check_time,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="open != null">
        open,
      </if>
      <if test="useTime != null">
        use_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="part != null">
        #{part,jdbcType=VARCHAR},
      </if>
      <if test="industryId != null">
        #{industryId,jdbcType=INTEGER},
      </if>
      <if test="industryType != null">
        #{industryType,jdbcType=INTEGER},
      </if>
      <if test="cycle != null">
        #{cycle,jdbcType=INTEGER},
      </if>
      <if test="nextTime != null">
        #{nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextCheckTime != null">
        #{nextCheckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="del != null">
        #{del,jdbcType=INTEGER},
      </if>
      <if test="open != null">
        #{open,jdbcType=INTEGER},
      </if>
      <if test="useTime != null">
        #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.web.model.TModel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_model_tbl
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="part != null">
        part = #{part,jdbcType=VARCHAR},
      </if>
      <if test="industryId != null">
        industry_id = #{industryId,jdbcType=INTEGER},
      </if>
      <if test="industryType != null">
        industry_type = #{industryType,jdbcType=INTEGER},
      </if>
      <if test="cycle != null">
        cycle = #{cycle,jdbcType=INTEGER},
      </if>
      <if test="nextTime != null">
        next_time = #{nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextCheckTime != null">
        next_check_time = #{nextCheckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=INTEGER},
      </if>
      <if test="open != null">
        open = #{open,jdbcType=INTEGER},
      </if>
      <if test="useTime != null">
        use_time = #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.web.model.TModel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_model_tbl
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      part = #{part,jdbcType=VARCHAR},
      industry_id = #{industryId,jdbcType=INTEGER},
      industry_type = #{industryType,jdbcType=INTEGER},
      cycle = #{cycle,jdbcType=INTEGER},
      next_time = #{nextTime,jdbcType=TIMESTAMP},
      next_check_time = #{nextCheckTime,jdbcType=TIMESTAMP},
      memo = #{memo,jdbcType=VARCHAR},
      del = #{del,jdbcType=INTEGER},
      open = #{open,jdbcType=INTEGER},
      use_time = #{useTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByMap" parameterType="java.util.Map" resultType="java.util.Map">
    select 
      T1.id, T1.title, T1.type, T1.flag, T1.cycle, T1.industry_type industryType, T1.part,
      T1.memo, T1.use_time useTime, T1.open, T1.next_time nextTime, T1.next_check_time nextCheckTime,
      group_concat(T2.name) partName, 
      (select count(0) count from t_check_tbl where model_id = T1.id and del = 0 and status = 2) c2,
      (select count(0) count from t_check_tbl where model_id = T1.id and del = 0) c
    from t_model_tbl T1
    left join t_model_part_tbl T2 on T1.id = T2.model_id
    <where>
      T1.del = 0
      <if test="userId != null and userId != ''">
        and T1.user_id = #{userId}
      </if>
      <if test="villageId != null">
        and T1.user_id in (select user_id from company_view where village_id = #{villageId} and is_del = '0')
      </if>
      <if test="townId != null">
        and T1.user_id in (select user_id from company_view where town_id = #{townId} and is_del = '0')
      </if>
      <if test="districtId != null">
        and T1.user_id in (select user_id from company_view where district_id = #{districtId} and is_del = '0')
      </if>
      <if test="flag != null and flag != ''">
        and T1.flag = #{flag}
      </if>
      <if test="type != null and type != ''">
        and T1.type = #{type}
      </if>
      <if test="industryType != null and industryType != ''">
        and T1.industry_type = #{industryType}
      </if>
      <if test="title != null and title != ''">
        and T1.title LIKE CONCAT('%', #{title},'%')
      </if>
    </where>
    group by T1.id
    order by T1.id desc
  </select>
  
  <select id="selectByMap1" parameterType="java.util.Map" resultType="java.util.Map">
    select 
      T1.id, T1.title, T1.type, T1.flag, T1.cycle, T1.industry_type industryType, T1.part,
      T1.memo, T1.use_time useTime, T1.open, T1.next_time nextTime, T1.next_check_time nextCheckTime,
      group_concat(T2.name) partName, 
      (select count(0) count from t_check_tbl where model_id = T1.id and del = 0 and status = 2) c2,
      (select count(0) count from t_check_tbl where model_id = T1.id and del = 0) c
    from t_model_tbl T1
    left join t_model_part_tbl T2 on T1.id = T2.model_id
    <where>
      T1.del = 0
      <if test="userId != null and userId != ''">
        and T1.user_id = #{userId}
      </if>
      <if test="villageId != null">
        and T1.user_id in (select user_id from company_view where village_id = #{villageId} and is_del = '0')
      </if>
      <if test="townId != null">
        and T1.user_id in (select user_id from company_view where town_id = #{townId} and is_del = '0')
      </if>
      <if test="districtId != null">
        and T1.user_id in (select user_id from company_view where district_id = #{districtId} and is_del = '0')
      </if>
      <if test="flag != null and flag != ''">
        and T1.flag = #{flag}
      </if>
      <if test="cycle != null and cycle != ''">
        and T1.cycle = #{cycle}
      </if>
      <if test="type != null and type != ''">
        and T1.type = #{type}
      </if>
      <if test="industryType != null and industryType != ''">
        and T1.industry_type = #{industryType}
      </if>
      <if test="title != null and title != ''">
        and T1.title LIKE CONCAT('%', #{title},'%')
      </if>
    </where>
    group by T1.id
    order by T1.id desc
  </select>
  <select id="selectByMap2" parameterType="java.util.Map" resultType="java.util.Map">
    select 
      T1.id, T1.title, T1.type, T1.flag, T1.cycle, T1.industry_type industryType, T1.part,
      T1.memo, T1.use_time useTime, T1.open, T1.next_time nextTime, T1.next_check_time nextCheckTime,
      group_concat(T2.name) partName, 
      (select count(0) count from t_check_tbl where model_id = T1.id and del = 0 and status = 2) c2,
      (select count(0) count from t_check_tbl where model_id = T1.id and del = 0) c
    from t_model_tbl T1
    left join t_model_part_tbl T2 on T1.id = T2.model_id
    <where>
      T1.del = 0 and cycle &lt;&gt; 1
      <if test="userId != null and userId != ''">
        and T1.user_id = #{userId}
      </if>
      <if test="villageId != null">
        and T1.user_id in (select user_id from company_view where village_id = #{villageId} and is_del = '0')
      </if>
      <if test="townId != null">
        and T1.user_id in (select user_id from company_view where town_id = #{townId} and is_del = '0')
      </if>
      <if test="districtId != null">
        and T1.user_id in (select user_id from company_view where district_id = #{districtId} and is_del = '0')
      </if>
      <if test="flag != null and flag != ''">
        and T1.flag = #{flag}
      </if>
      <if test="type != null and type != ''">
        and T1.type = #{type}
      </if>
      <if test="industryType != null and industryType != ''">
        and T1.industry_type = #{industryType}
      </if>
      <if test="title != null and title != ''">
        and T1.title LIKE CONCAT('%', #{title},'%')
      </if>
    </where>
    group by T1.id
    order by T1.id desc
  </select>
  <select id="selectAuto" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_model_tbl
    where del = 0 and open = 1 and next_time &lt; now();
  </select>

  <!--根据uid查询所有的模版信息
      根据公司
      未删除的
      根据id进行排序
   -->
  <select id="selectModelByUid" resultType="Map" >
    select id, title from t_model_tbl where  user_id =#{uid} and del=0 and flag=1 and part=#{dpName} order by id ;
  </select>
  <!--政府端查询模版信息

    -->
  <select id="selectCountryModelByUid" resultType="Map">
     select id, title from t_model_tbl where  user_id =#{uid} and del=0 order by id ;
  </select>

</mapper>