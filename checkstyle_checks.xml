<?xml version="1.0" encoding="UTF-8"?>

<!--

03./*

04.* Copyright 2001-2004 The Apache Software Foundation.

05.*

06.* Licensed under the Apache License, Version 2.0 (the "License");

07.* you may not use this file except in compliance with the License.

08.* You may obtain a copy of the License at

09.*

10.*      http://www.apache.org/licenses/LICENSE-2.0

11.*

12.* Unless required by applicable law or agreed to in writing, software

13.* distributed under the License is distributed on an "AS IS" BASIS,

14.* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

15.* See the License for the specific language governing permissions and

16.* limitations under the License.

17.*/

18.-->



<!DOCTYPE module PUBLIC

    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"

    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<module name="Checker">



    <!--

      javadoc部分的检测都属于第二等级，建议使用。

      -->

    <!-- <module name="PackageHtml">

        <property name="severity" value="warning"/>

    </module> -->


    <!--

33.      每个源文件的结尾，必须有一个空行。

34.      这部分由代码美化器控制。

35.      

36.    <module name="NewlineAtEndOfFile"/>

37.        -->

    <!--

39.      翻译

40.      -->

    <module name="Translation"/>

<module name="FileLength">

     <property name="severity" value="warning"/>

  </module>
<module name="FileTabCharacter"/>
    <module name="TreeWalker">




<property name="tabWidth" value="4"/>





        <!--

          Javadoc comments

          javadoc部分的检测都属于第二等级，建议使用。
          -->

        <module name="JavadocMethod">

            <property name="severity"    value="warning"/>

    </module>

     <module name="JavadocType">

            <property name="severity" value="warning"/>

        </module>

        <module name="JavadocVariable">

            <property name="severity" value="warning"/>

        </module>

        <module name="JavadocStyle">

            <property name="severity" value="warning"/>

        </module>





        <!--

          Naming conventions

         命名方式属于第一等级，一定要保证统一的命名格式。

          -->

       <module name="MemberName" />

       <module name="ConstantName"/>

        <module name="LocalFinalVariableName"/>

        <module name="LocalVariableName"/>

        <module name="MethodName"/>

        <module name="PackageName"/>

        <module name="ParameterName"/>

        <module name="StaticVariableName"/>

        <module name="TypeName"/>




        <!--

          Headers

          -->





        <!--

          Imports

          强制要求import不能使用*，不能使用sun开头的包，不能重复import，也不能有没用到的包。

          -->

        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/>

        <module name="RedundantImport"/>

        <module name="UnusedImports"/>





        <!--

          Size Violations

          每行不得超过120个字符，@version和@see部分除外，这两部分有可能超过120个字符。

          文件长度不能超过2000，方法长度不能超过150，内部类不能超过20行，方法的参数不能多于7个。

          这几个也属于建议级别。

          -->

        <module name="LineLength">

            <property name="max" value="120" />

            <property name="ignorePattern" value="@version|@see"/>

        </module>

        
        <module name="MethodLength">

           <property name="severity" value="warning"/>

</module>

<module name="ParameterNumber">

<property name="severity" value="warning"/>

        </module>

      <module name="AnonInnerLength">

           <property name="severity" value="warning"/>

        </module>





<!--

 Whitespace

for循环的空白，用空白包裹操作符，不允许使用\t制表符

 使用代码美化器实现，这些是必须遵守的。

 -->

<module name="EmptyForIteratorPad"/>

<module name="OperatorWrap"/>

<module name="ParenPad"/>



<module name="MethodParamPad"/>





<!--

Modifiers

 修饰符必须按顺序排列，不允许重复。

 -->

<module name="ModifierOrder"/>

<module name="RedundantModifier"/>


<!--

 Block checks

禁止出现块嵌套，if,else即使只有一行数据，也要写上大括号。

emptyblock可以提醒开发者，不要忘记实现block中的内容。

-->

<module name="LeftCurly"/>

<module name="RightCurly"/>

<module name="AvoidNestedBlocks"/>

<module name="EmptyBlock"/>

<module name="NeedBraces">

<property name="tokens" value="LITERAL_IF, LITERAL_ELSE"/>

</module>


<!--

Coding

不要重复检测同一条件，不能用空的语句，检测equals和hashcode配对，

除了setter和constructor其他方法的参数和类变量不能同名，

不能使用性能不高的初始化方法，不能在参数表中使用赋值语句，

不能使用无法确定含义的数字，除了-1，0，1，2以外，

switch必须包含default，使用简单boolean表达式和返回表达式。

-->

<module name="EmptyStatement"/>

<module name="EqualsHashCode"/>

<module name="HiddenField">

<property name="ignoreConstructorParameter" value="true"/>

<property name="ignoreSetter" value="true"/>

</module>

<module name="IllegalInstantiation"/>

<module name="InnerAssignment"/>

<module name="MagicNumber"/>

<module name="MissingSwitchDefault"/>
<module name="RedundantThrows"/>

<module name="SimplifyBooleanExpression"/>

<module name="SimplifyBooleanReturn"/>


<!--

Class Design

interface中必须定义方法，不能只有变量。

-->

<module name="FinalClass"/>

<module name="HideUtilityClassConstructor"/>

<module name="InterfaceIsType"/>

<module name="VisibilityModifier">

<property name="protectedAllowed" value="true"/>
</module>



<!--

Duplicate code

-->


<!--

Metrics

DAC不大于7，

CFO不大于20，

CC不大于10，

NPath不大于200，

布尔表达式，运算符不超过3个

-->

<module name="ClassDataAbstractionCoupling">

<property name="severity" value="info"/>

</module>

<module name="ClassFanOutComplexity">

<property name="severity" value="info"/>

</module>

<module name="CyclomaticComplexity">

<property name="severity" value="info"/>

</module>

<module name="NPathComplexity">

<property name="severity" value="info"/>

</module>

<module name="BooleanExpressionComplexity">

<property name="severity" value="info"/>

</module>


<!--

Miscellaneous other checks.

行末不能有空格，符合TODO:形式的注释会被提示出来

用于测试的main函数（没有注释），应该删除

          定义long应该使用“L”而不是“l”

          使用java格式的数组类型定义
          -->

<module name="ArrayTypeStyle"/>

<module name="TodoComment"/>

        <module name="UpperEll"/>

        <module name="UncommentedMain"/>



</module>



</module>