<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.web.dao.GlobalRegionMapper">
  <resultMap id="BaseResultMap" type="com.spring.web.model.GlobalRegion">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="parent_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="region_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="region_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="city_code" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, parent_id, region_name, region_type, city_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from global_region_tbl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from global_region_tbl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.spring.web.model.GlobalRegion">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into global_region_tbl (parent_id, region_name, region_type, 
      city_code)
    values (#{parentId,jdbcType=INTEGER}, #{regionName,jdbcType=VARCHAR}, #{regionType,jdbcType=VARCHAR}, 
      #{cityCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.spring.web.model.GlobalRegion">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into global_region_tbl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="regionName != null">
        region_name,
      </if>
      <if test="regionType != null">
        region_type,
      </if>
      <if test="cityCode != null">
        city_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="regionName != null">
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionType != null">
        #{regionType,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null">
        #{cityCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.web.model.GlobalRegion">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update global_region_tbl
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="regionName != null">
        region_name = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionType != null">
        region_type = #{regionType,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null">
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.web.model.GlobalRegion">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update global_region_tbl
    set parent_id = #{parentId,jdbcType=INTEGER},
      region_name = #{regionName,jdbcType=VARCHAR},
      region_type = #{regionType,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
      T1.id, T1.parent_id, 
      CASE WHEN T1.region_type = '3' THEN CONCAT(T3.region_name,T2.region_name,T1.region_name)
      WHEN T1.region_type = '2' THEN CONCAT(T2.region_name,T1.region_name)
      ELSE T1.region_name
      END  region_name, T1.region_type, T1.city_code
    from 
      global_region_tbl T1
    left join
      global_region_tbl T2
    on
      T1.parent_id = T2.id
    left join
      global_region_tbl T3
    on
      T2.parent_id = T3.id
    where 
      T1.id = #{id}
  </select>
  
  <select id="selectByType" parameterType="java.lang.String" resultType="com.spring.web.ibatis.DynamicParameter">
    select 
      id, region_name regionName, parent_id parentId, region_type regionType, city_code cityCode
    from 
      global_region_tbl
    where 
      region_type = #{regionType}
  </select>
  
  <select id="selectByCityCode" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   select 
      T1.id, T1.parent_id, 
      CONCAT(T2.region_name,T1.region_name) region_name, 
      T1.region_type, T1.city_code
    from 
      global_region_tbl T1
    left join
      global_region_tbl T2
    on
      T1.parent_id = T2.id
    where T1.city_code = #{cityCode}
  </select>
  
  <select id="selectByParentId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from global_region_tbl
    where parent_id = #{parentId}
  </select>
  
   <select id="selectParentId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select parent_id
    from global_region_tbl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectRegionName" parameterType="java.lang.Integer" resultType="java.lang.String">
    select region_name
    from global_region_view
    where id = #{id}
  </select>
  
  
  <select id="selectGlobalRegionById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
      T1.id, T1.parent_id, 
      CASE WHEN T1.region_type = '3' THEN CONCAT(T3.region_name,'#',T2.region_name,'#',T1.region_name)
      WHEN T1.region_type = '2' THEN CONCAT(T2.region_name,'#',T1.region_name)
      ELSE T1.region_name
      END  region_name, T1.region_type, T1.city_code
    from 
      global_region_tbl T1
    left join
      global_region_tbl T2
    on
      T1.parent_id = T2.id
    left join
      global_region_tbl T3
    on
      T2.parent_id = T3.id
    where 
      T1.id = #{id}
  </select>
  
  <select id="selectByName" parameterType="java.util.Map" resultType="java.lang.Integer">
    select 
      id
    from 
      global_region_view T1
    where 
      region_name = #{name}
  </select>
</mapper>