<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.web.dao.TCheckMapper">
    <resultMap id="BaseResultMap" type="com.spring.web.model.TCheck">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="flag" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="depart" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="depart_img" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="create_user" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="model_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="industry_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="industry_type" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="expect_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="real_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="cheker" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="contact" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="dapart_contact" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="del" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="check_company" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="longitude" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="latitude" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, flag, title, depart, depart_img, user_id, create_user, model_id, type, industry_id,
        industry_type, expect_time, real_time, cheker, contact, dapart_contact, status, create_time,
        del, check_company,longitude,latitude
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_check_tbl
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_check_tbl
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.spring.web.model.TCheck">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_check_tbl (flag, title, depart,
        depart_img, user_id, create_user,
        model_id, type, industry_id,
        industry_type, expect_time, real_time,
        cheker, contact, dapart_contact,
        status, create_time, del,
        check_company,longitude,latitude)
        values (#{flag,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{depart,jdbcType=VARCHAR},
        #{departImg,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER},
        #{modelId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{industryId,jdbcType=INTEGER},
        #{industryType,jdbcType=INTEGER}, #{expectTime,jdbcType=TIMESTAMP}, #{realTime,jdbcType=TIMESTAMP},
        #{cheker,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{dapartContact,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{del,jdbcType=INTEGER},
        #{checkCompany,jdbcType=VARCHAR},#{longitude,jdbcType=DECIMAL},#{latitude,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="com.spring.web.model.TCheck">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_check_tbl
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="flag != null">
                flag,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="depart != null">
                depart,
            </if>
            <if test="departImg != null">
                depart_img,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="modelId != null">
                model_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="industryId != null">
                industry_id,
            </if>
            <if test="industryType != null">
                industry_type,
            </if>
            <if test="expectTime != null">
                expect_time,
            </if>
            <if test="realTime != null">
                real_time,
            </if>
            <if test="cheker != null">
                cheker,
            </if>
            <if test="contact != null">
                contact,
            </if>
            <if test="dapartContact != null">
                dapart_contact,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="del != null">
                del,
            </if>
            <if test="checkCompany != null">
                check_company,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="depart != null">
                #{depart,jdbcType=VARCHAR},
            </if>
            <if test="departImg != null">
                #{departImg,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="modelId != null">
                #{modelId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="industryId != null">
                #{industryId,jdbcType=INTEGER},
            </if>
            <if test="industryType != null">
                #{industryType,jdbcType=INTEGER},
            </if>
            <if test="expectTime != null">
                #{expectTime,jdbcType=TIMESTAMP},
            </if>
            <if test="realTime != null">
                #{realTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cheker != null">
                #{cheker,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                #{contact,jdbcType=VARCHAR},
            </if>
            <if test="dapartContact != null">
                #{dapartContact,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="del != null">
                #{del,jdbcType=INTEGER},
            </if>
            <if test="checkCompany != null">
                #{checkCompany,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DECIMAL},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=DECIMAL}
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.spring.web.model.TCheck">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_check_tbl
        <set>
            <if test="flag != null">
                flag = #{flag,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="depart != null">
                depart = #{depart,jdbcType=VARCHAR},
            </if>
            <if test="departImg != null">
                depart_img = #{departImg,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="modelId != null">
                model_id = #{modelId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="industryId != null">
                industry_id = #{industryId,jdbcType=INTEGER},
            </if>
            <if test="industryType != null">
                industry_type = #{industryType,jdbcType=INTEGER},
            </if>
            <if test="expectTime != null">
                expect_time = #{expectTime,jdbcType=TIMESTAMP},
            </if>
            <if test="realTime != null">
                real_time = #{realTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cheker != null">
                cheker = #{cheker,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                contact = #{contact,jdbcType=VARCHAR},
            </if>
            <if test="dapartContact != null">
                dapart_contact = #{dapartContact,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="del != null">
                del = #{del,jdbcType=INTEGER},
            </if>
            <if test="checkCompany != null">
                check_company = #{checkCompany,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DECIMAL},
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=DECIMAL}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.spring.web.model.TCheck">

        update t_check_tbl
        set flag = #{flag,jdbcType=INTEGER},
        title = #{title,jdbcType=VARCHAR},
        depart = #{depart,jdbcType=VARCHAR},
        depart_img = #{departImg,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=INTEGER},
        create_user = #{createUser,jdbcType=INTEGER},
        model_id = #{modelId,jdbcType=INTEGER},
        type = #{type,jdbcType=INTEGER},
        industry_id = #{industryId,jdbcType=INTEGER},
        industry_type = #{industryType,jdbcType=INTEGER},
        expect_time = #{expectTime,jdbcType=TIMESTAMP},
        real_time = #{realTime,jdbcType=TIMESTAMP},
        cheker = #{cheker,jdbcType=VARCHAR},
        contact = #{contact,jdbcType=VARCHAR},
        dapart_contact = #{dapartContact,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        del = #{del,jdbcType=INTEGER},
        check_company = #{checkCompany,jdbcType=VARCHAR},
        longitude = #{longitude,jdbcType=DECIMAL},
        latitude = #{latitude,jdbcType=DECIMAL}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 政府端隐患排查记录数据查询 -->
    <select id="selectList" resultType="java.util.Map">
        select
        T1.id, T1.title, T1.depart, T1.model_id modelId, T1.type, T1.industry_id industryId, T1.industry_type
        industryType,
        T1.expect_time expectTime, T1.real_time realTime, T1.cheker, T1.contact, T1.dapart_contact dapartContact,
        T1.status, T1.create_time createTime, T1.flag, T1.check_company checkCompany, T2.name companyName,
        (select count(0) from t_check_item_tbl where check_id = T1.id and status > 1) c,
        (select count(0) from t_recheck_tbl where check_id = T1.id) c3,
        (select count(0) from t_rectification_tbl where check_id = T1.id) t
        from t_check_tbl T1
        left join company_tbl T2 on T1.user_id = T2.user_id
        <where>
            T1.del = 0 and T1.status = 2
            <if test="title != null and title != ''">
                and T1.title LIKE CONCAT('%', #{title},'%')
            </if>
            <if test="type != null and type != ''">
                and T1.industry_type = #{type}
            </if>
            <if test="status != null">
                and T1.status = #{status}
            </if>
            <if test="flag != null">
                and T1.flag = #{flag}
            </if>
            <if test="extime != null">
                and expect_time is not null and expect_time &lt; #{now1}
            </if>
            <if test="userIds != null and userIds != ''">
                and T2.user_id in (${userIds})
            </if>
            <if test="userId != null and userId != ''">
                and T2.user_id = #{userId}
            </if>
        </where>
        order by T1.id desc
    </select>






    <select id="selectList1" resultType="java.util.Map">
        select
        T1.id, T1.title, T1.depart, T1.model_id modelId, T1.type, T1.industry_id industryId, T1.industry_type
        industryType,
        T1.expect_time expectTime, T1.real_time realTime, T1.cheker, T1.contact, T1.dapart_contact dapartContact,
        T1.status, T1.create_time createTime, T1.flag, T1.check_company checkCompany, T2.name companyName,
        (select count(0) from t_check_item_tbl where check_id = T1.id and status > 1) c,
        (select count(0) from t_recheck_tbl where check_id = T1.id) c3,
        (select count(0) from t_rectification_tbl where check_id = T1.id) t
        from t_check_tbl T1
        left join company_tbl T2 on T1.user_id = T2.user_id
        <where>
            T1.del = 0
            <if test="title != null and title != ''">
                and T1.title LIKE CONCAT('%', #{title},'%')
            </if>
            <if test="type != null and type != ''">
                and T1.industry_type = #{type}
            </if>
            <if test="status != null">
                and T1.status = #{status}
            </if>
            <if test="flag != null">
                and T1.flag = #{flag}
            </if>
            <!--  <if test="userIds != null and userIds != ''">
              and T2.user_id in (${userIds})
            </if> zhangcl 2018.12.29 i dont know why use userIds-->
            <if test="userId != null and userId != ''">
                and T2.user_id = #{userId}
            </if>
        </where>
        order by T1.id desc
    </select>

    <!--pc端查询检查记录-->
    <select id="selectList2" resultType="java.util.Map">
        select
        T1.id, T1.title, T1.depart, T1.model_id modelId, T1.type, T1.industry_id industryId, T1.industry_type
        industryType,
        T1.expect_time expectTime, T1.real_time realTime, T1.cheker, T1.contact, T1.dapart_contact dapartContact,
        T1.status, T1.create_time createTime, T1.flag, T1.check_company checkCompany, T2.name companyName,
        (select count(0) from t_check_item_tbl where check_id = T1.id and status > 1) c,
        (select count(0) from t_recheck_tbl where check_id = T1.id) c3,
        (select count(0) from t_rectification_tbl where check_id = T1.id) t
        from t_check_tbl T1
        left join company_tbl T2 on T1.user_id = T2.user_id
        <where>
            T1.del = 0
            <if test="title != null and title != ''">
                and T1.title LIKE CONCAT('%', #{title},'%')
            </if>
            <if test="type != null and type != ''">
                and T1.industry_type = #{type}
            </if>
            <if test="status != null">
                and T1.status = #{status}
            </if>
            <if test="flag != null">
                and T1.flag = #{flag}
            </if>
            <if test="extime != null">
                and expect_time is not null and expect_time &lt; #{now1}
            </if>
            <if test="userIds != null and userIds != ''">
                and T2.user_id in (${userIds})
            </if>
            <if test="userId != null and userId != ''">
                and T2.user_id = #{userId}
            </if>
        </where>
        order by T1.id desc
    </select>



    <!-- 政府端查询检查记录！！！ -->
    <select id="selectAll" resultType="java.util.Map">
        select
        T1.id, T1.title, T1.depart, T1.model_id modelId, T1.type, T1.industry_id industryId, T1.industry_type
        industryType,
        T1.expect_time expectTime, T1.real_time realTime, T1.cheker, T1.contact, T1.dapart_contact dapartContact,
        T1.status, T1.create_time createTime, T1.flag, T1.check_company checkCompany, T2.name companyName,
        (select count(0) from t_check_item_tbl where check_id = T1.id and status > 1) c,
        (select count(0) from t_recheck_tbl where check_id = T1.id) c3,
        (select count(0) from t_rectification_tbl where check_id = T1.id) t
        from t_check_tbl T1
        left join company_tbl T2 on T1.user_id = T2.user_id
        where
        T1.del = 0 and T1.status = 2 and T2.user_id in (${userIds})
    </select>



    <update id="updateDel" parameterType="com.spring.web.model.TCheck">
        update t_check_tbl
        set
        del = 1
        where id = #{id,jdbcType=INTEGER}
    </update>





    <select id="selectCompany" resultType="com.spring.web.ibatis.DynamicParameter">
        select
        T1.id,T1.user_id userId, T1.title, T1.depart, T1.model_id modelId, T1.type, T1.industry_id industryId,
        T1.industry_type industryType,
        T1.expect_time expectTime, T1.real_time realTime, T1.cheker, T1.contact, T1.dapart_contact dapartContact,
        T1.status, T1.create_time createTime, T1.flag, T1.check_company checkCompany,
        T2.name companyName,
        (select count(0) from t_check_item_tbl where check_id = T1.id and status > 1) c,
        (select count(0) from t_recheck_tbl where check_id = T1.id) c3,
        (select count(0) from t_rectification_tbl where check_id = T1.id) t
        from t_check_tbl T1
        left join company_tbl T2 on T1.user_id = T2.user_id
        <where>
            <if test="id != null and id != ''">
                and T1.id = #{id}
            </if>
        </where>
        order by T1.id desc
    </select>

    <delete id="deleteById">
        ${sql}
    </delete>
    <!--表示
        查询该模版对应的最新的检查记录,但是只查询一条
     -->
    <select id="selectByModelId" resultMap="BaseResultMap">
        select
        *
        from t_check_tbl
        where
        model_id = #{modelId} order by id desc limit 0 ,1 ;
    </select>

    <!--根据uid和id查询该人原本的检查表信息-->
    <select id="findAllByUidAndUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_check_tbl
        where user_id =#{Uid} and create_user=#{id} and status = 2 order by id desc ;
    </select>

    <!--根据模版id查询最早的检查记录-->
    <select id="selectOldByModelId" resultType="com.spring.web.model.TCheck">
        select * from t_check_tbl where model_id = #{modelId} and status=0 order by id limit 0 ,1;
    </select>

    <!--政府端获取已检查记录-->
    <select id="selectRecordByCreateUser" parameterType="Integer" resultType="java.util.Map">
        SELECT * FROM t_check_tbl  WHERE create_user = #{id} and status=2  group by id desc ;
    </select>

</mapper>