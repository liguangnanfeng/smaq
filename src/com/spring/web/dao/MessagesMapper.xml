<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.web.dao.MessagesMapper">
  <resultMap id="BaseResultMap" type="com.spring.web.model.Messages">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="send_flag" jdbcType="TINYINT" property="sendFlag" />
    <result column="send_total" jdbcType="INTEGER" property="sendTotal" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="files" jdbcType="VARCHAR" property="files" />
    <result column="create_utp" jdbcType="INTEGER" property="createUtp" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.spring.web.model.Messages">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    m.id, m.user_id, m.title, m.descr, m.create_time, m.send_flag, m.send_total, m.del_flag,m.files,create_utp
  </sql>
  <sql id="Blob_Column_List">
    m.content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from messages m
    where m.id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getSendMessages" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT 
	  m.`id` AS messageId,
	  m.`create_time` AS createTime,
	  m.`title` AS title,
	  m.`send_total` AS sendTotal,
	  COUNT(mtu.`id`) AS readCount
	FROM
	  `messages` m 
	  LEFT JOIN `message_to_user` mtu 
	    ON m.`id` = mtu.`message_id`
	    AND mtu.`read_flag` = 1 
	WHERE m.`user_id` = #{map.userId} 
	 AND m.`del_flag` = 0
	<if test="map.title != null">
	  	AND m.`title` like CONCAT('%', #{map.title},'%')
	  </if>
	  GROUP BY m.`id`
	  order by m.`create_time` desc
	  limit #{map.page} ,#{map.limit}
  </select>
  
  <select id="getSendMessagesCount" parameterType="java.util.Map" resultType="java.lang.Integer">
   SELECT 
	  count(*) 
	FROM
	  `messages` m 
	LEFT JOIN `message_to_user` mtu 
	    ON m.`id` = mtu.`message_id`
	    AND mtu.`read_flag` = 1 
	WHERE m.`user_id` = #{map.userId} 
	<if test="map.title != null">
	  	AND m.`title` like CONCAT('%', #{map.title},'%')
	  </if>
	  AND  m.`del_flag` = 0
  </select>
  
  <select id="getRecviceMessages" parameterType="java.util.Map" resultType="java.util.Map">
   SELECT 
	  m.`id` AS messageId,
	  m.`title` AS title,
	  m.`descr` AS descr,
	  m.`create_time` AS createTime,
	  m.`user_id` AS createId,
	  m.`create_utp` AS createUserType,
	  mtu.`read_flag` AS readFlag 
	FROM
	  `messages` m 
	  LEFT JOIN `message_to_user` mtu 
	    ON m.`id` = mtu.`message_id` 
	WHERE mtu.`user_id` = #{map.userId} 
	  AND mtu.`del_flag` = 0
	  AND  m.`del_flag` = 0
	  <if test="map.title != null">
	  	AND m.`title` like CONCAT('%', #{map.title},'%')
	  </if>
	   ORDER BY mtu.read_flag,m.create_time DESC
	  limit #{map.page} ,#{map.limit}
  </select>
  
  <select id="getRecviceMessagesCount" parameterType="java.util.Map" resultType="java.lang.Integer">
   SELECT 
	  count(*) 
	FROM
	  `messages` m 
	  LEFT JOIN `message_to_user` mtu 
	    ON m.`id` = mtu.`message_id` 
	WHERE mtu.`user_id` = #{map.userId} 
	<if test="map.title != null">
	  	AND m.`title` like CONCAT('%', #{map.title},'%')
	  </if>
	  AND mtu.`del_flag` = 0
	  AND  m.`del_flag` = 0
  </select>
  
  <select id="getMessageByCondition" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
  	select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from 
    `messages` m 
	  LEFT JOIN `message_to_user` mtu 
	    ON mtu.`message_id` = m.id 
	WHERE m.id = #{map.messageId} 
	  AND mtu.user_id = #{map.reviceUserId}
	  AND mtu.`del_flag` = 0
	  AND  m.`del_flag` = 0
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from messages
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.spring.web.model.Messages">
    insert into messages (id, user_id, title, 
      descr, create_time, send_flag, 
      send_total, del_flag, content,files,create_utp
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{descr,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{sendFlag,jdbcType=TINYINT}, 
      #{sendTotal,jdbcType=INTEGER}, #{delFlag,jdbcType=TINYINT}, #{content,jdbcType=LONGVARCHAR},
      #{files,jdbcType=VARCHAR},#{create_utp,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spring.web.model.Messages">
    insert into messages
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="descr != null">
        descr,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="sendFlag != null">
        send_flag,
      </if>
      <if test="sendTotal != null">
        send_total,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="files != null">
        files,
      </if>
      <if test="createUtp != null">
        create_utp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendFlag != null">
        #{sendFlag,jdbcType=TINYINT},
      </if>
      <if test="sendTotal != null">
        #{sendTotal,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="files != null">
        #{files,jdbcType=VARCHAR},
      </if>
      <if test="createUtp != null">
        #{createUtp,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.web.model.Messages">
    update messages
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        descr = #{descr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendFlag != null">
        send_flag = #{sendFlag,jdbcType=TINYINT},
      </if>
      <if test="sendTotal != null">
        send_total = #{sendTotal,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="files != null">
        files = #{files,jdbcType=VARCHAR},
      </if>
       <if test="createUtp != null">
        create_utp = #{createUtp,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.spring.web.model.Messages">
    update messages
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      send_flag = #{sendFlag,jdbcType=TINYINT},
      send_total = #{sendTotal,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARCHAR},
       create_utp = #{createUtp,jdbcType=INTEGER},
      files = #{files,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.web.model.Messages">
    update messages
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      send_flag = #{sendFlag,jdbcType=TINYINT},
      send_total = #{sendTotal,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=TINYINT},
       create_utp = #{createUtp,jdbcType=INTEGER},
      files = #{files,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>