<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.web.dao.VillageMapper">
    <resultMap id="BaseResultMap" type="com.spring.web.model.Village">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <constructor>
            <idArg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="accountNum" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="region_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="town_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="states" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        user_id, accountNum, name, region_id, address, town_id, states
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from village_tbl
        where user_id = #{userId,jdbcType=INTEGER}
    </select>


    <select id="findUserID" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from village_tbl
        where town_id = #{town_id}
    </select>




    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from village_tbl
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.spring.web.model.Village">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into village_tbl (user_id, accountNum, name,
        region_id, address, town_id,
        states)
        values (#{userId,jdbcType=INTEGER}, #{accountnum,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{regionId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{townId,jdbcType=INTEGER},
        #{states,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.spring.web.model.Village">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into village_tbl
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="accountnum != null">
                accountNum,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="regionId != null">
                region_id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="townId != null">
                town_id,
            </if>
            <if test="states != null">
                states,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="accountnum != null">
                #{accountnum,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="regionId != null">
                #{regionId,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="townId != null">
                #{townId,jdbcType=INTEGER},
            </if>
            <if test="states != null">
                #{states,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.spring.web.model.Village">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update village_tbl
        <set>
            <if test="accountnum != null">
                accountNum = #{accountnum,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="regionId != null">
                region_id = #{regionId,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="townId != null">
                town_id = #{townId,jdbcType=INTEGER},
            </if>
            <if test="states != null">
                states = #{states,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.spring.web.model.Village">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update village_tbl
        set accountNum = #{accountnum,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        region_id = #{regionId,jdbcType=INTEGER},
        address = #{address,jdbcType=VARCHAR},
        town_id = #{townId,jdbcType=INTEGER},
        states = #{states,jdbcType=INTEGER}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <select id="selectVillageList" parameterType="com.spring.web.model.Village"
            resultType="com.spring.web.ibatis.DynamicParameter">
        select
        T1.user_id userId, T1.name, T1.region_id regionId, T1.address,
        T3.user_name userName, T3.is_freeze isFreeze, T1.town_id townId, T4.name townName,
        T2.region_name regionName
        from village_tbl T1
        left join global_region_view T2 on T1.region_id = T2.id
        left join user_tbl T3 on T1.user_id = T3.id
        left join town_tbl T4 on T1.town_id = T4.user_id
        <where>
            T3.is_del = '0'
            <if test="name != '' and name != null">
                and T1.name LIKE CONCAT('%', #{name},'%')
            </if>
        </where>
        order by T1.user_id desc
    </select>

    <select id="selectByName" parameterType="com.spring.web.model.Village" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from village_tbl
        where name = #{name} and region_id = #{regionId}
        <if test="userId != null">
            <![CDATA[and user_id <> #{userId} ]]>
        </if>
    </select>

    <select id="selectVillageByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from village_tbl
        where name = #{name}
    </select>

    <select id="selectAllVillage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from village_tbl where user_id in (select id from user_tbl where is_del = '0' and user_type = 4 and is_freeze =
        '0')
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
    select count(0) from user_tbl where user_type = 4 and is_del = '0' 
    union all
    select count(0) from user_tbl where user_type = 3 and is_del = '0' 
    union all
    select count(0) from user_tbl where user_type = 5 and is_del = '0' 
    union all
    select count(0) from sperson_tbl where user_id in (select id from user_tbl where is_del = '0')
    union all
    select count(0) from sequipment_tbl where user_id in (select id from user_tbl where is_del = '0')
    union all
    select count(0) from detection_tbl where user_id in (select id from user_tbl where is_del = '0')
    union all
    select count(0) from evaluation_tbl where user_id in (select id from user_tbl where is_del = '0')
    union all
    select count(0) from standard_tbl where user_id in (select id from user_tbl where is_del = '0')
  </select>

    <select id="selectYuCount" resultType="java.lang.Integer">
    <![CDATA[
        select count(0) from sperson_tbl where review_time <= #{time} and review_time >= #{now} and user_id in (${userIds})
        union all
        select count(0) from sequipment_tbl where expiration_time <= #{time} and expiration_time >= #{now} and user_id in (${userIds})
        union all
        select count(0) from detection_tbl where expiration_time <= #{time} and expiration_time >= #{now} and user_id in (${userIds})
        union all
        select count(0) from examination_tbl where end_time <= #{time} and end_time >= #{now} and user_id in (${userIds})

        union all
        select count(0) from evaluation_tbl where expiration_time <= #{time3} and expiration_time >= #{now1} and user_id in (${userIds})

        union all
        select count(0) from standard_tbl where time_exp <= #{time2} and time_exp >= #{now} and user_id in (${userIds})

        union all
        select count(0) from recheck_yj_view where c = 0 and user_id in (${userIds})

        union all
        select count(0) from t_check_item_view2 where d = 1 and user_id in (${userIds}) and status = 2

        union all
        select count(0) from t_contingency_plan_tbl where active_time <= #{time3} and active_time >= #{now1} and user_id in (${userIds})

        union all
        select count(0) from t_check_tbl where del = 0 and user_id in (${userIds}) and status = 1 and flag = 1
        ]]>
  </select>

    <update id="updTown">
    update
      village_tbl
    set
      town_id = #{townId}
    where
      user_id in (${ids})
  </update>

    <update id="updTownNull">
    update
      village_tbl
    set
      town_id = null
    where
      town_id = #{townId}
  </update>

    <select id="selectListByTown" resultType="com.spring.web.ibatis.DynamicParameter">
        SELECT
        T1.user_id userId,T1.accountNum,T1.name,T1.town_id townId,T2.longitude,T2.latitude
        FROM
        village_tbl T1
        LEFT JOIN user_tbl T2 ON T1.user_id = T2.id
        <where>
            <if test="townId != null">
                and T1.town_id = #{townId}
            </if>
            <if test="districtId != null">
                and T1.town_id in (select user_id from town_tbl where district_id = ${districtId})
            </if>
        </where>
    </select>

    <select id="selectVillage" resultType="com.spring.web.ibatis.DynamicParameter">
    SELECT
        user_id code,
        name,
        town_id pid 
    FROM
        village_tbl a
        LEFT JOIN user_tbl b ON a.user_id = b.id
    WHERE
        b.is_del = 0 and a.town_id is not null
  </select>

    <select id="selectUserId" resultType="java.lang.Integer">
        SELECT
        user_id userId
        FROM
        company_view
        WHERE
        is_del = '0'
        <if test="villageId != null">
            and village_id = #{villageId}
        </if>
        <if test="districtId != null">
            and district_id = #{districtId}
        </if>
        <if test="townId != null">
            and town_id = #{townId}
        </if>
    </select>

    <!--
        根据镇级查询所有的村级
    -->
    <select id="selectByTownId" resultType="java.util.Map" parameterType="Integer">
        select user_id as id ,name from village_tbl where town_id=#{id};
  </select>

    <!--村级账号查询详细信息-->
    <select id="selectParticularByUid" parameterType="Integer">
    select v.user_id,v.name as upName, v.address, o.name,o.code,o.depart, o.flag
    from  officials_tbl o  left join village_tbl v on  v.user_id=o.uid   where o.id =#{id};
  </select>

</mapper>