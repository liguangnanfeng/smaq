<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.web.dao.TownMapper">
  <resultMap id="BaseResultMap" type="com.spring.web.model.Town">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="accountNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="region_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="district_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    user_id, accountNum, name, region_id, address, district_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from town_tbl
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from town_tbl
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.spring.web.model.Town">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into town_tbl (user_id, accountNum, name, 
      region_id, address, district_id
      )
    values (#{userId,jdbcType=INTEGER}, #{accountnum,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{regionId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{districtId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spring.web.model.Town">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into town_tbl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="accountnum != null">
        accountNum,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="regionId != null">
        region_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="districtId != null">
        district_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="accountnum != null">
        #{accountnum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null">
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="districtId != null">
        #{districtId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.web.model.Town">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update town_tbl
    <set>
      <if test="accountnum != null">
        accountNum = #{accountnum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null">
        region_id = #{regionId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="districtId != null">
        district_id = #{districtId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.web.model.Town">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update town_tbl
    set accountNum = #{accountnum,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      region_id = #{regionId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      district_id = #{districtId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <select id="selectTownList" parameterType="java.util.Map" resultType="com.spring.web.ibatis.DynamicParameter">
    select 
      T1.user_id userId, T1.name, T1.region_id regionId, T1.address, T1.district_id districtId,
      T2.user_name userName, T2.is_freeze isFreeze,
      T3.region_name regionName, (select count(0) from village_tbl where town_id = T1.user_id) c
    from town_tbl T1
    left join user_tbl T2 on T1.user_id = T2.id
    left join global_region_view T3 on T1.region_id = T3.id
    <where>
      T2.is_del = '0'
      <if test="userName != null and userName != ''">
        and T2.user_name LIKE CONCAT('%', #{userName},'%')
      </if>
      <if test="name != null and name != ''">
        and T1.name LIKE CONCAT('%', #{name},'%')
      </if>
      <if test="isFreeze != null and isFreeze != ''">
        and T2.is_freeze = #{isFreeze}
      </if>
    </where>
    order by T1.user_id desc
  </select>
  
  <select id="selectByName" parameterType="com.spring.web.model.Town" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from town_tbl
    where name = #{name} and region_id = #{regionId}
    <if test="userId != null"> 
    <![CDATA[and user_id <> #{userId} ]]>
    </if>
  </select>
  
  <update id="updTown">
    update
      town_tbl
    set
      district_id = #{districtId}
    where
      user_id in (${ids})
  </update>
  
  <update id="updTownNull">
    update
      town_tbl
    set
      district_id = null
    where
      district_id = #{districtId}
  </update>
  
  <select id="selectListByDistrict" resultType="java.util.Map">
    SELECT
        T1.user_id userId, T1.name,T1.district_id districtId,T2.longitude,T2.latitude
    FROM
        town_tbl T1
        LEFT JOIN user_tbl T2 ON T1.user_id = T2.id
    WHERE 
        T2.is_del = 0 
    <if test="districtId != null">
        AND T1.district_id = #{districtId}
    </if>
  </select>
  
  <select id="selectTown" resultType="com.spring.web.ibatis.DynamicParameter">
    SELECT
        a.user_id code,
        a.name name,
        a.district_id pid 
    FROM
        town_tbl a
        LEFT JOIN user_tbl b ON a.user_id = b.id
    WHERE
        b.is_del = 0 and a.district_id is not null
  </select>
</mapper>