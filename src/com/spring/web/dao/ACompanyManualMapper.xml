<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.web.dao.ACompanyManualMapper">


    <resultMap id="BaseResultMap" type="com.spring.web.model.ACompanyManual">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="uid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="dmid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="level1" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="level2" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="level3" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="factors" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="measures" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reference" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="flag" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="level" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="issys" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="del" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="ctime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="gkcs" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="gkzt" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="fjgkfzr" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="material" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="gy" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="hxys" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="wlbs" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="flag2" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="gwzy" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="lnglat" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="riskId" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="commerce" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="control" javaType="java.lang.String" jdbcType="VARCHAR" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">

        id, uid, dmid, level1, level2, level3, factors, type, measures, reference, flag,
        level, issys, del, ctime, gkcs, gkzt, fjgkfzr, material, gy, hxys, wlbs, flag2, gwzy,
        lnglat, riskId, commerce, control
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>
        from a_company_manual_tbl
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">

        delete from a_company_manual_tbl
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <!-- 高危风险数据添加！！！ -->
    <insert id="insert" parameterType="com.spring.web.model.ACompanyManual">
        insert into a_company_manual_tbl (id, uid, dmid,
        level1, level2, level3,
        factors, type, measures,
        reference, flag, level,
        issys, del, ctime,
        gkcs, gkzt, fjgkfzr,
        material, gy, hxys,
        wlbs, flag2, gwzy,
        lnglat, riskId, commerce, control)
        values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{dmid,jdbcType=INTEGER},
        #{level1,jdbcType=VARCHAR}, #{level2,jdbcType=VARCHAR}, #{level3,jdbcType=VARCHAR},
        #{factors,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{measures,jdbcType=VARCHAR},
        #{reference,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},
        #{issys,jdbcType=INTEGER}, #{del,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP},
        #{gkcs,jdbcType=VARCHAR}, #{gkzt,jdbcType=VARCHAR}, #{fjgkfzr,jdbcType=VARCHAR},
        #{material,jdbcType=VARCHAR}, #{gy,jdbcType=VARCHAR}, #{hxys,jdbcType=VARCHAR},
        #{wlbs,jdbcType=VARCHAR}, #{flag2,jdbcType=VARCHAR}, #{gwzy,jdbcType=VARCHAR},
        #{lnglat,jdbcType=VARCHAR}, #{riskId,jdbcType=INTEGER}, #{commerce,jdbcType=VARCHAR}, #{control,jdbcType=VARCHAR})
    </insert>



    <insert id="insertSelective" parameterType="com.spring.web.model.ACompanyManual">

        insert into a_company_manual_tbl
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="dmid != null">
                dmid,
            </if>
            <if test="level1 != null">
                level1,
            </if>
            <if test="level2 != null">
                level2,
            </if>
            <if test="level3 != null">
                level3,
            </if>
            <if test="factors != null">
                factors,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="measures != null">
                measures,
            </if>
            <if test="reference != null">
                reference,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="issys != null">
                issys,
            </if>
            <if test="del != null">
                del,
            </if>
            <if test="ctime != null">
                ctime,
            </if>
            <if test="gkcs != null">
                gkcs,
            </if>
            <if test="gkzt != null">
                gkzt,
            </if>
            <if test="fjgkfzr != null">
                fjgkfzr,
            </if>
            <if test="material != null">
                material,
            </if>
            <if test="gy != null">
                gy,
            </if>
            <if test="hxys != null">
                hxys,
            </if>
            <if test="wlbs != null">
                wlbs,
            </if>
            <if test="flag2 != null">
                flag2,
            </if>
            <if test="gwzy != null">
                gwzy,
            </if>
            <if test="lnglat != null">
                lnglat,
            </if>
            <if test="riskId != null">
                riskId,
            </if>
            <if test="commerce != null">
                commerce,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="dmid != null">
                #{dmid,jdbcType=INTEGER},
            </if>
            <if test="level1 != null">
                #{level1,jdbcType=VARCHAR},
            </if>
            <if test="level2 != null">
                #{level2,jdbcType=VARCHAR},
            </if>
            <if test="level3 != null">
                #{level3,jdbcType=VARCHAR},
            </if>
            <if test="factors != null">
                #{factors,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="measures != null">
                #{measures,jdbcType=VARCHAR},
            </if>
            <if test="reference != null">
                #{reference,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=VARCHAR},
            </if>
            <if test="issys != null">
                #{issys,jdbcType=INTEGER},
            </if>
            <if test="del != null">
                #{del,jdbcType=INTEGER},
            </if>
            <if test="ctime != null">
                #{ctime,jdbcType=TIMESTAMP},
            </if>
            <if test="gkcs != null">
                #{gkcs,jdbcType=VARCHAR},
            </if>
            <if test="gkzt != null">
                #{gkzt,jdbcType=VARCHAR},
            </if>
            <if test="fjgkfzr != null">
                #{fjgkfzr,jdbcType=VARCHAR},
            </if>
            <if test="material != null">
                #{material,jdbcType=VARCHAR},
            </if>
            <if test="gy != null">
                #{gy,jdbcType=VARCHAR},
            </if>
            <if test="hxys != null">
                #{hxys,jdbcType=VARCHAR},
            </if>
            <if test="wlbs != null">
                #{wlbs,jdbcType=VARCHAR},
            </if>
            <if test="flag2 != null">
                #{flag2,jdbcType=VARCHAR},
            </if>
            <if test="gwzy != null">
                #{gwzy,jdbcType=VARCHAR},
            </if>
            <if test="lnglat != null">
                #{lnglat,jdbcType=VARCHAR},
            </if>
            <if test="riskId != null">
                #{riskId,jdbcType=VARCHAR},
            </if>
            <if test="commerce != null">
                #{commerce,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.spring.web.model.ACompanyManual">
        update a_company_manual_tbl
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="dmid != null">
                dmid = #{dmid,jdbcType=INTEGER},
            </if>
            <if test="level1 != null">
                level1 = #{level1,jdbcType=VARCHAR},
            </if>
            <if test="level2 != null">
                level2 = #{level2,jdbcType=VARCHAR},
            </if>
            <if test="level3 != null">
                level3 = #{level3,jdbcType=VARCHAR},
            </if>
            <if test="factors != null">
                factors = #{factors,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="measures != null">
                measures = #{measures,jdbcType=VARCHAR},
            </if>
            <if test="reference != null">
                reference = #{reference,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=VARCHAR},
            </if>
            <if test="issys != null">
                issys = #{issys,jdbcType=INTEGER},
            </if>
            <if test="del != null">
                del = #{del,jdbcType=INTEGER},
            </if>
            <if test="ctime != null">
                ctime = #{ctime,jdbcType=TIMESTAMP},
            </if>
            <if test="gkcs != null">
                gkcs = #{gkcs,jdbcType=VARCHAR},
            </if>
            <if test="gkzt != null">
                gkzt = #{gkzt,jdbcType=VARCHAR},
            </if>
            <if test="fjgkfzr != null">
                fjgkfzr = #{fjgkfzr,jdbcType=VARCHAR},
            </if>
            <if test="material != null">
                material = #{material,jdbcType=VARCHAR},
            </if>
            <if test="gy != null">
                gy = #{gy,jdbcType=VARCHAR},
            </if>
            <if test="hxys != null">
                hxys = #{hxys,jdbcType=VARCHAR},
            </if>
            <if test="wlbs != null">
                wlbs = #{wlbs,jdbcType=VARCHAR},
            </if>
            <if test="flag2 != null">
                flag2 = #{flag2,jdbcType=VARCHAR},
            </if>
            <if test="gwzy != null">
                gwzy = #{gwzy,jdbcType=VARCHAR},
            </if>
            <if test="lnglat != null">
                lnglat = #{lnglat,jdbcType=VARCHAR},
            </if>
            <if test="riskId != null">riskId
                riskId = #{riskId,jdbcType=VARCHAR},
            </if>
            <if test="commerce != null">riskId
                riskId = #{commerce,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.spring.web.model.ACompanyManual">

        update a_company_manual_tbl
        set uid = #{uid,jdbcType=INTEGER},
        dmid = #{dmid,jdbcType=INTEGER},
        level1 = #{level1,jdbcType=VARCHAR},
        level2 = #{level2,jdbcType=VARCHAR},
        level3 = #{level3,jdbcType=VARCHAR},
        factors = #{factors,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR},
        measures = #{measures,jdbcType=VARCHAR},
        reference = #{reference,jdbcType=VARCHAR},
        flag = #{flag,jdbcType=VARCHAR},
        level = #{level,jdbcType=VARCHAR},
        issys = #{issys,jdbcType=INTEGER},
        del = #{del,jdbcType=INTEGER},
        ctime = #{ctime,jdbcType=TIMESTAMP},
        gkcs = #{gkcs,jdbcType=VARCHAR},
        gkzt = #{gkzt,jdbcType=VARCHAR},
        fjgkfzr = #{fjgkfzr,jdbcType=VARCHAR},
        material = #{material,jdbcType=VARCHAR},
        gy = #{gy,jdbcType=VARCHAR},
        hxys = #{hxys,jdbcType=VARCHAR},
        wlbs = #{wlbs,jdbcType=VARCHAR},
        flag2 = #{flag2,jdbcType=VARCHAR},
        gwzy = #{gwzy,jdbcType=VARCHAR},
        lnglat = #{lnglat,jdbcType=VARCHAR},
        riskId = #{riskId,jdbcType=VARCHAR},
        commerce = #{commerce,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>



    <update id="updateType" >
        update a_company_manual_tbl
        set
        type = #{type,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>






    <select id="selectByMaps" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat , T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1
        where
        T1.del = 0 and (T1.flag = "1" or T1.flag = "2" or T1.flag = "3")  and T1.uid = #{uid}
    </select>

    <!-- 现场风险数据查询 -->
    <select id="selectByAll" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1
        where
        T1.del = 0 and level3 like "现场管理%"
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="dmid != null">
            and T1.dmid = #{dmid}
        </if>
        order by T1.level1 asc, T1.riskId asc
    </select>


    <!-- 基础风险数据查询 -->
    <select id="selectBase" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1
        where
        T1.del = 0 and level3 like "基础管理%"
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        order by T1.level1 asc, T1.riskId asc
    </select>



    <select id="findOne" resultType="com.spring.web.model.ACompanyManual">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1
        where
        T1.del = 0 and level3 LIKE CONCAT('%', #{level3},'%')
        and T1.uid = #{uid}
        and T1.dmid = #{dmid}
        order by T1.level1 asc, T1.riskId asc
    </select>



    <select id="selectByMap" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1

        where
        T1.del = 0 and T1.level != ""
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>

        <if test="level != null and level != ''">
            and T1.level = #{level}
        </if>
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>

        <if test="order != null">
            order by find_in_set(T1.level,'红色,橙色,黄色,蓝色')
        </if>
        <if test="order == null">
            order by T1.id asc
        </if>
    </select>



    <select id="selectByMapLevel3" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1

        where
        T1.del = 0 and T1.level != "" and T1.level3 like "%现场%"
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>

        <if test="level != null and level != ''">
            and T1.level = #{level}
        </if>
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>

        <if test="order != null">
            order by find_in_set(T1.level,'红色,橙色,黄色,蓝色')
        </if>
        <if test="order == null">
            order by T1.id asc
        </if>
    </select>



    <select id="selectRed" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1
        where
        T1.del = 0 and T1.level != ""
            and T1.uid = #{userId}
            order by find_in_set(T1.level,'红色,橙色,黄色,蓝色')
    </select>



    <select id="selectByMapTwo" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1

        where
        T1.del = 0 and T1.level != ""
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>

        <if test="level != null and level != ''">
            and T1.level = #{level}
        </if>
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>
        group by T1.level1
        <if test="order != null">
            order by find_in_set(T1.level,'红色,橙色,黄色,蓝色')
        </if>
        <if test="order == null">
            order by T1.id asc
        </if>
    </select>

    <select id="selectNum" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1
        where
        T1.del = 0 and T1.level = ""
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>

        <if test="level != null and level != ''">
            and T1.level = #{level}
        </if>
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>
        <if test="order != null">
            order by find_in_set(T1.level,'红色,橙色,黄色,蓝色')
        </if>
        <if test="order == null">
            order by T1.id asc
        </if>
    </select>


    <!-- 分级管控数据显示排序 -->
    <select id="selectByAcs" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1
        where
        T1.del = 0 and T1.level != ""
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>

        <if test="level != null and level != ''">
            and T1.level = #{level}
        </if>
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>
        order by dmid asc , find_in_set(T1.level,'红色,橙色,黄色,蓝色')
    </select>


    <select id="selectByFlag3" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1
        where
        T1.uid = #{uid} and T1.del = 0 and T1.level in  (${level})
    </select>


    <select id="selectByAssess7" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.gwzy,T1.lnglat, T1.riskId, T1.commerce
        from
        a_company_manual_tbl T1
        where
        T1.uid = #{uid} and T1.del = 0 and T1.flag = 3
    </select>


    <select id="findRiskId" resultType="com.spring.web.model.ACompanyManual">
        select riskId from `a_company_manual_tbl` where uid = #{uid} and del = 0 and dmid = #{dmid} and level3 LIKE CONCAT('%', #{level3},'%')
    </select>





    <select id="selectByMapGroupByLevel1Level2" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs, T1.gwzy<!-- ,
        T3.score, T3.lev lev1, T4.score score2, T4.lev lev2,
        (select level from a_company_manual_zp_tbl where acm_id = T1.id) zpLevel -->
        from
        a_company_manual_tbl T1
        <!--  left join
             a_fxjz_tbl T3 on T1.id = T3.uid
         left join
             a_zytjfxcdpj_tbl T4 on T1.id = T4.uid -->
        where
        T1.del = 0
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>
        <!-- <if test="type == 1">
            and (T1.hxys is not null and T1.hxys != '')
        </if>
        <if test="type == 2">
            and (T1.material is not null and T1.material != '')
        </if>
        <if test="type == 3">
            and (T1.gy is not null and T1.gy != '')
        </if>
        <if test="type == 4">
            and (T1.wlbs is not null and T1.wlbs != '')
        </if> -->
        <if test="level != null and level != ''">
            and T1.level = #{level}
        </if>
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>
        group by level1, level2
        <if test="order != null">
            order by find_in_set(T1.level,'红色,橙色,黄色,蓝色')
        </if>
        <if test="order == null">
            order by level1 desc
        </if>
    </select>

    <select id="selectByMap2" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,T1.lnglat,
        T2.name companyName, T2.industry<!-- ,
        T3.score, T3.lev lev1, T4.score score2, T4.lev lev2 -->
        from
        a_company_manual_tbl T1
        left join
        company_view T2 on T1.uid = T2.user_id
        <!--  left join
             a_fxjz_tbl T3 on T1.id = T3.uid
         left join
             a_zytjfxcdpj_tbl T4 on T1.id = T4.uid -->
        where
        T1.del = 0 and T2.is_del = '0'
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>
        <!-- <if test="type == 1">
            and (T1.hxys is not null and T1.hxys != '')
        </if>
        <if test="type == 2">
            and (T1.material is not null and T1.hxys != '')
        </if>
        <if test="type == 3">
            and (T1.gy is not null and T1.gy != '')
        </if>
        <if test="type == 4">
            and (T1.wlbs is not null and T1.wlbs != '')
        </if> -->
        <if test="level != null and level != ''">
            and T1.level = #{level}
        </if>
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="companyName != null and companyName != ''">
            and T2.name LIKE CONCAT('%', #{companyName},'%')
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>
        <if test="villageId != null">
            and T2.village_id = #{villageId}
        </if>
        <if test="townId != null">
            and T2.town_id = #{townId}
        </if>
        <if test="districtId != null">
            and T2.district_id = #{districtId}
        </if>
        <if test="tradeId != null">
            and T1.uid IN ( SELECT uid FROM trade_company_tbl WHERE tid = #{tradeId} )
        </if>
        order by T1.id desc
    </select>


    <select id="selectByMap3" resultType="java.util.HashMap">
        select
        T1.uid,T2.name companyName,T1.level,count(T1.id) AS companyNum
        from
        a_company_manual_tbl T1
        left join
        company_view T2 on T1.uid = T2.user_id
        where
        T1.del = 0 and T2.is_del = '0'
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>
        <if test="level != null and level != ''">
            and T1.level = #{level}
        </if>
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="companyName != null and companyName != ''">
            and T2.name LIKE CONCAT('%', #{companyName},'%')
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>
        <if test="villageId != null">
            and T2.village_id = #{villageId}
        </if>
        <if test="townId != null">
            and T2.town_id = #{townId}
        </if>
        <if test="districtId != null">
            and T2.district_id = #{districtId}
        </if>
        <if test="tradeId != null">
            and T1.uid IN ( SELECT uid FROM trade_company_tbl WHERE tid = #{tradeId} )
        </if>
        group by T1.uid
    </select>

    <update id="deleteFlag2">
        update
        a_company_manual_tbl
        set
        del = 1
        where
        del = 0 and uid = #{uid} and flag = 2
    </update>

    <insert id="insertBath">
        insert into a_company_manual_tbl (uid, dmid, level1,
        level2, level3, factors,
        type, measures, reference, flag,
        level, issys, gkzt, fjgkfzr,
        del, ctime,flag2)
        values
        <foreach collection="list" item="item" separator=",">
            (#{uid}, #{item.dmid}, #{item.level1},
            #{item.level2}, #{item.level3}, #{item.factors},
            #{item.type}, #{item.measures}, #{item.reference},
            <choose>
                <when test="flag == null or flag == ''">
                    #{item.flag},
                </when>
                <otherwise>
                    #{flag},
                </otherwise>
            </choose>
            #{item.level}, #{issys}, #{item.gkzt}, #{item.fjgkfzr}, #{del}, #{ctime},#{item.flag2})
        </foreach>
    </insert>

    <!-- 添加数据信息 -->
    <insert id="add" parameterType="com.spring.web.model.ACompanyManual">
        insert into a_company_manual_tbl (uid, dmid,
        level1, level2, level3,
        factors,flag, level,
        issys, del, ctime,
        gwzy)
        values (#{uid,jdbcType=INTEGER}, #{dmid,jdbcType=INTEGER},
        #{level1,jdbcType=VARCHAR}, #{level2,jdbcType=VARCHAR}, #{level3,jdbcType=VARCHAR},
        #{factors,jdbcType=VARCHAR},#{flag,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},
        #{issys,jdbcType=INTEGER}, #{del,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP},
        #{gwzy,jdbcType=VARCHAR})
    </insert>


    <!-- 添加数据信息 -->
    <insert id="save" parameterType="com.spring.web.model.ACompanyManual">
        insert into a_company_manual_tbl (uid,level3,
        factors, type, measures,reference, flag, level,
        del, ctime)
        values (#{uid,jdbcType=INTEGER},#{level3,jdbcType=VARCHAR},
        #{factors,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{measures,jdbcType=VARCHAR},
        #{reference,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},
        #{del,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP})
    </insert>


    <select id="selectByMap2Limit" resultType="java.util.HashMap">
        select
        T1.id, T1.uid, T1.dmid, T1.level1, T1.level2, T1.level3, T1.factors, T1.type, T1.measures, T1.reference,
        T1.flag,
        T1.level, T1.issys, T1.del, T1.ctime, T1.level, T1.gkcs, T1.gkzt, T1.fjgkfzr, T1.material, T1.gy, T1.hxys,
        T1.wlbs,
        T2.name companyName, T2.industry<!-- ,
        T3.score, T3.lev lev1, T4.score score2, T4.lev lev2,
        (select level from a_company_manual_zp_tbl where acm_id = T1.id) zpLevel -->
        from
        a_company_manual_tbl T1
        left join
        company_view T2 on T1.uid = T2.user_id
        <!--  left join
             a_fxjz_tbl T3 on T1.id = T3.uid
         left join
             a_zytjfxcdpj_tbl T4 on T1.id = T4.uid -->
        where
        T1.del = 0 and T2.is_del = '0'
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>
        <!-- <if test="type == 1">
                and (T1.hxys is not null and T1.hxys != '')
        </if>
        <if test="type == 2">
                and (T1.material is not null and T1.hxys != '')
        </if>
        <if test="type == 3">
                and (T1.gy is not null and T1.gy != '')
        </if>
        <if test="type == 4">
                and (T1.wlbs is not null and T1.wlbs != '')
        </if> -->
        <if test="level != null and level != ''">
            and T1.level = #{level}
        </if>
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="companyName != null and companyName != ''">
            and T2.name LIKE CONCAT('%', #{companyName},'%')
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>
        <if test="villageId != null">
            and T2.village_id = #{villageId}
        </if>
        <if test="townId != null">
            and T2.town_id = #{townId}
        </if>
        <if test="districtId != null">
            and T2.district_id = #{districtId}
        </if>
        <if test="tradeId != null">
            and T1.uid IN ( SELECT uid FROM trade_company_tbl WHERE tid = #{tradeId} )
        </if>
        order by T1.id desc
        limit #{page},#{limit}
    </select>

    <select id="selectByMap2LimitCount" resultType="java.lang.Integer">
        select
        count(*)
        from
        a_company_manual_tbl T1
        left join
        company_view T2 on T1.uid = T2.user_id
        left join
        a_fxjz_tbl T3 on T1.id = T3.uid
        left join
        a_zytjfxcdpj_tbl T4 on T1.id = T4.uid
        where
        T1.del = 0 and T2.is_del = '0'
        <if test="uid != null">
            and T1.uid = #{uid}
        </if>
        <if test="flag != null">
            and T1.flag in (${flag})
        </if>
        <if test="flag2 != null">
            and T1.flag2 = #{flag2}
        </if>
        <!-- <if test="type == 1">
                and (T1.hxys is not null and T1.hxys != '')
        </if>
        <if test="type == 2">
                and (T1.material is not null and T1.hxys != '')
        </if>
        <if test="type == 3">
                and (T1.gy is not null and T1.gy != '')
        </if>
        <if test="type == 4">
                and (T1.wlbs is not null and T1.wlbs != '')
        </if>
        <if test="level != null and level != ''">
                and T1.level = #{level}
        </if> -->
        <if test="levels != null">
            and T1.level in
            <foreach close=")" collection="levels" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="companyName != null and companyName != ''">
            and T2.name LIKE CONCAT('%', #{companyName},'%')
        </if>
        <if test="userId != null">
            and T1.uid = #{userId}
        </if>
        <if test="villageId != null">
            and T2.village_id = #{villageId}
        </if>
        <if test="townId != null">
            and T2.town_id = #{townId}
        </if>
        <if test="districtId != null">
            and T2.district_id = #{districtId}
        </if>
        <if test="tradeId != null">
            and T1.uid IN ( SELECT uid FROM trade_company_tbl WHERE tid = #{tradeId} )
        </if>
    </select>

    <select id="selectDangerCompanyList" resultType="java.util.HashMap">
        SELECT
        MAX(T2.`user_id`) AS userId,
        COUNT(T1.`id`) AS total,
        MAX(T2.name) AS companyName
        FROM
        a_company_manual_tbl T1
        LEFT JOIN
        company_view T2 ON T1.uid = T2.user_id
        WHERE
        T1.del = 0 AND T2.is_del = '0'
        <if test="level != null and level != ''">
            AND T1.level = #{level}
        </if>
        <if test="companyName != null and companyName != ''">
            AND T2.name LIKE CONCAT('%', #{companyName},'%')
        </if>
        <if test="userId != null">
            AND T1.uid = #{userId}
        </if>
        <if test="villageId != null">
            AND T2.village_id = #{villageId}
        </if>
        <if test="townId != null">
            AND T2.town_id = #{townId}
        </if>
        <if test="districtId != null">
            AND T2.district_id = #{districtId}
        </if>
        <if test="tradeId != null">
            AND T1.uid IN ( SELECT uid FROM trade_company_tbl WHERE tid = #{tradeId} )
        </if>
        GROUP BY T2.`user_id`
        ORDER BY total DESC
    </select>

    <update id="updateByL1L2" parameterType="com.spring.web.model.ACompanyManual">
        update a_company_manual_tbl
        <set>
            <if test="material != null">
                material = #{material,jdbcType=VARCHAR},
            </if>
            <if test="gy != null">
                gy = #{gy,jdbcType=VARCHAR},
            </if>
            <if test="hxys != null">
                hxys = #{hxys,jdbcType=VARCHAR},
            </if>
            <if test="wlbs != null">
                wlbs = #{wlbs,jdbcType=VARCHAR},
            </if>
            <if test="gwzy != null">
                gwzy = #{gwzy,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid} and level1 = #{level1} and level2 = #{level2} and flag in (1,3) and del = 0
    </update>

    <update id="updateCompanyDlevel">
        update
        company_tbl
        set
        dlevel = (select level from a_company_manual_tbl where uid = #{userId} and del = 0 order by find_in_set(level,'红色,橙色,黄色,蓝色') limit 1)
        where
        user_id = #{userId}
    </update>


    <update id="updateDelByUserId">
        update
        a_company_manual_tbl
        set
        del = 0
        where
        uid = #{uid} and flag2 = 1
    </update>


    <!--根据公司ID，风险等级 查询未删除的数据信息 -->
    <select id="selectIdss" resultType="com.spring.web.model.ACompanyManual">
        select id from a_company_manual_tbl where flag = "1" and del = 0 and uid = #{uid};
    </select>


    <!--根据公司ID，风险等级 查询未删除的数据信息 -->
    <select id="selectAlls" resultType="com.spring.web.model.ACompanyManual">
        select id from a_company_manual_tbl where flag = "3" and del = 0 and uid = #{uid};
    </select>


    <!--根据公司ID，风险等级 查询未删除的数据信息 -->
    <select id="selectIds" resultType="com.spring.web.model.ACompanyManual">
        select id from a_company_manual_tbl where flag = "2" and del = 0 and uid = #{uid};
    </select>


    <!--根据公司ID，风险等级 查询未删除的数据信息 -->
    <select id="findALLsss" resultType="com.spring.web.model.ACompanyManual">
        select * from a_company_manual_tbl where del = 0 and level = #{level} and uid = #{uid} order by id asc;
    </select>


    <!--根据公司ID，风险等级 查询未删除的数据信息 -->
    <select id="selectIdsAll" resultType="com.spring.web.model.ACompanyManual">
        select * from a_company_manual_tbl where level1 = #{level1} and level2 = #{level2} and del = 0 and uid = #{uid} and level3 like "%现场管理%" ;
    </select>


    <!--根据公司ID，风险等级 查询未删除的数据信息 -->
    <select id="selectIdsAlls" resultType="com.spring.web.model.ACompanyManual">
        select * from a_company_manual_tbl where level1 = #{level1} and level2 = #{level2} and del = 0 and uid = #{uid};
    </select>


    <update id="updateDelByUserId2">
        update
        a_company_manual_tbl
        set
        del = 0
        where
        uid = #{uid} and flag = 3
    </update>


    <update id="updateAllUid">
        update
        a_company_manual_tbl
        set
        del = 1
        where
        uid = #{uid} and del = 0 and level1 = #{level1} and level2 = #{level2} and level3 like "%现场管理%"
    </update>

    <update id="updateAllUids">
        update
        a_company_manual_tbl
        set
        del = 1
        where
        uid = #{uid} and del = 0 and level1 = #{level1} and level2 = #{level2} and level3 like "%基础管理%"
    </update>

    <insert id="insertBathByIndustry">
        insert into a_company_manual_tbl (uid, dmid, level3, factors, type, measures, reference,
        flag, level, issys, del, ctime,flag2)
        values
        <foreach collection="list" item="item" separator=",">
            (#{uid}, #{item.id}, #{item.level3}, #{item.factors}, #{item.type}, #{item.measures}, #{item.reference},
            <choose>
                <when test="flag == null or flag == ''">
                    #{item.flag},
                </when>
                <otherwise>
                    #{flag},
                </otherwise>
            </choose>
            #{item.level}, #{issys}, #{del}, #{ctime},#{item.flag2})
        </foreach>
    </insert>

    <!-- 基础风险数据添加 -->
        <insert id="insertAdd">
        insert into a_company_manual_tbl (uid,dmid,
        level1, level2, level3, factors, type, measures, reference, flag, level, del, ctime,gkzt, fjgkfzr, riskId, commerce, control)
        values (#{uid,jdbcType=INTEGER}, #{dmid,jdbcType=INTEGER},
        #{level1,jdbcType=VARCHAR}, #{level2,jdbcType=VARCHAR}, #{level3,jdbcType=VARCHAR},#{factors,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{measures,jdbcType=VARCHAR},#{reference,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},#{del,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP},
        #{gkzt,jdbcType=VARCHAR},#{fjgkfzr,jdbcType=VARCHAR}, #{riskId,jdbcType=VARCHAR}, #{commerce,jdbcType=VARCHAR}, #{control,jdbcType=VARCHAR})
    </insert>

    <!-- 修改数据信息达到删除的目的 -->
    <update id="updateDeltess">
        update
        a_company_manual_tbl
        set
        del = 1
        where
        id = #{id}
    </update>

    <!-- 根据 ids 修改数据信息达到删除的目的 -->
    <update id="updateAll">
        update
        a_company_manual_tbl
        set
        del = 1
        where
        id = #{id}
    </update>

    <update id="updateDelByIds">
        update
        a_company_manual_tbl
        set
        del = 1
        where
        id in (${ids})
    </update>

    <update id="updateLnglat" parameterType="com.spring.web.model.ACompanyManual">
        update a_company_manual_tbl
        <set>
            <if test="lnglat != null">
                lnglat = #{lnglat,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--  开始检查 获取level2 岗位和工位-->
    <select id="selectDangerAndManual" resultType="String">
        select level2  from a_company_manual_tbl where uid=#{uid}  and del=0 and level1 = #{name} group by  level1, level2;
    </select>

    <!--查询风险点-->
    <select id="selectLevel3AndId" resultType="java.util.Map">
        select id, uid , level1,level2, level3 ,measures as level4
        from a_company_manual_tbl
        where uid=#{uid}
        and level1 = #{level1}
        and del=0
        and level2 = #{level2};
    </select>
    <!--获取风险点及其id-->
    <select id="selectLevel4AndId" resultType="java.util.Map">
        select id, uid , level1,level2, level3 ,measures as level4 , factors,reference, type as types,flag,gkcs,gkzt
        from a_company_manual_tbl
        where uid=#{uid}
        and level1 = #{level1}
        and level2=#{level2}
        and level3=#{level3}
        and del=0;
    </select>

    <!--查询行业id
    -->
    <select id="selectDmidById" resultType="Integer">
        select id from a_industry_tbl where name =#{name};
    </select>

    <!--根据公司id和风险点进行查询-->
    <select id="findJiChuItem" resultType="java.util.Map">
        select dmid,level1
        from a_company_manual_tbl
        where uid=#{uid}  and  level3 LIKE CONCAT('%', #{name},'%')
        and del=0
        group By level1;
    </select>

    <!--根据总公司的id和部门名称查询level2-->
    <select id="findLevel2ByPersonelId" resultType="List">
        select level2
        from a_company_manual_tbl
        where level1=#{name}
        and uid=#{uid}
        and del=0;
    </select>

    <!--根根据公司id，部门，岗位名-->

    <select id="findInspection" resultType="java.lang.String">
        select  level3 from a_company_manual_tbl
        WHERE uid=#{id} and level1 like CONCAT('%',#{dept},'%') and level2 like CONCAT('%',#{station},'%')
        and level3 not like '%高危%'
        and del=0
        group by level3;
    </select>

    <!--根据公司ID，风险程度，是否删除 来查询数据信息-->
    <select id="selectAll" resultType="com.spring.web.model.ACompanyManual">
        select * from a_company_manual_tbl where level= "红色" and del = 0 and  and del=0 uid = #{uid};
    </select>

    <!--根据部门的名称和uid获取数据(现场)-->
    <select id="selectlevel3BydmName" resultType="String">
        
        select level3 from a_company_manual_tbl where uid=#{uid}
        and level1=#{level1}
        and level3  not LIKE '%基础管理%'
        and del=0
        and measures !=''
        group by level3;

    </select>
    <!--根据基础/高危(备用)获取level3的数据,然后根据level3的数据获取到响应的部门-->
    <select id="selectlevel3BydmNameAndLevel3" resultType="String">
         select level3 from a_company_manual_tbl where uid=#{uid}
         and level1=#{level1} and level3 LIKE CONCAT('%', #{level3},'%')  and del=0 and measures !=''
         group by level3;
    </select>

    <!--根据部门的Uid和level1和level3获取详细信息
     怎样提高查询性能
     -->
    <select id="selectAllByLevel3" resultType="com.spring.web.model.ACompanyManual">
        SELECT
        <include refid="Base_Column_List"/>
        FROM a_company_manual_tbl
        where uid=#{uid}
        and level1 = #{level1}
        and del=0
        and level3 = #{level3}
        order by level2 asc ;
    </select>

</mapper>
