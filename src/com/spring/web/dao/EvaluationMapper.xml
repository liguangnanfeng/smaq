<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.web.dao.EvaluationMapper">
  <resultMap id="BaseResultMap" type="com.spring.web.model.Evaluation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="flag" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="report_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="report_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="expiration_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="unit" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="doc_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="doc_url" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, flag, type, report_name, report_time, expiration_time, remark, unit, 
    doc_name, doc_url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from evaluation_tbl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from evaluation_tbl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.spring.web.model.Evaluation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into evaluation_tbl (user_id, flag, type, 
      report_name, report_time, expiration_time, 
      remark, unit, doc_name, 
      doc_url)
    values (#{userId,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{reportName,jdbcType=VARCHAR}, #{reportTime,jdbcType=VARCHAR}, #{expirationTime,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{docName,jdbcType=VARCHAR}, 
      #{docUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.spring.web.model.Evaluation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into evaluation_tbl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="reportName != null">
        report_name,
      </if>
      <if test="reportTime != null">
        report_time,
      </if>
      <if test="expirationTime != null">
        expiration_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="docName != null">
        doc_name,
      </if>
      <if test="docUrl != null">
        doc_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="reportName != null">
        #{reportName,jdbcType=VARCHAR},
      </if>
      <if test="reportTime != null">
        #{reportTime,jdbcType=VARCHAR},
      </if>
      <if test="expirationTime != null">
        #{expirationTime,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="docName != null">
        #{docName,jdbcType=VARCHAR},
      </if>
      <if test="docUrl != null">
        #{docUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.web.model.Evaluation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update evaluation_tbl
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="reportName != null">
        report_name = #{reportName,jdbcType=VARCHAR},
      </if>
      <if test="reportTime != null">
        report_time = #{reportTime,jdbcType=VARCHAR},
      </if>
      <if test="expirationTime != null">
        expiration_time = #{expirationTime,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="docName != null">
        doc_name = #{docName,jdbcType=VARCHAR},
      </if>
      <if test="docUrl != null">
        doc_url = #{docUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.web.model.Evaluation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update evaluation_tbl
    set user_id = #{userId,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      report_name = #{reportName,jdbcType=VARCHAR},
      report_time = #{reportTime,jdbcType=VARCHAR},
      expiration_time = #{expirationTime,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      doc_name = #{docName,jdbcType=VARCHAR},
      doc_url = #{docUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <insert id="insertBatch" parameterType="java.util.Map">
        insert into evaluation_tbl
        (user_id,type,report_name,report_time,expiration_time,remark )
        values
        <foreach close="" collection="list" index="" item="item" open="" separator=",">
            (${userId},#{item.type},#{item.reportName},#{item.reportTime},#{item.expirationTime},#{item.remark})
        </foreach>
    </insert>

    <!--安全评估-->
    <select id="selectEvaluationList" parameterType="java.util.Map" resultType="com.spring.web.ibatis.DynamicParameter">
        select
          T1.id, T1.user_id userId, T1.flag, T1.type, T1.report_name reportName, T1.report_time reportTime, 
          T1.expiration_time expirationTime, T1.unit, T1.doc_name docName, T1.doc_url docUrl,
          T1.remark, T2.name companyName, T2.village_name villageName
        from evaluation_tbl T1
        left join company_view T2 on T1.user_id = T2.user_id
        <where>
            T2.is_del = 0
        <if test="userId != null">
            and T1.user_id = #{userId} 
        </if>
        <if test="villageId != null"> and T2.village_id = #{villageId}</if>
        <if test="townId != null"> and T2.town_id = #{townId}</if>
        <if test="districtId != null"> and T2.district_id = #{districtId}</if>
        <if test="tradeId != null">
            and T1.user_id IN ( SELECT uid FROM trade_company_tbl WHERE tid = #{tradeId} )
        </if>
        <if test="flag != nul and flag != 0">
            and T1.flag = #{flag}
        </if>
        <if test="reportName != null and reportName != ''">
            and T1.report_name LIKE CONCAT('%', #{reportName},'%')
        </if>
        <if test="evaType != null and evaType != ''">
            and T1.type = #{evaType}
        </if>
        <if test="villageName != null and villageName != ''">
           and T2.village_name LIKE CONCAT('%', #{villageName},'%')
        </if>
        <if test="companyName != null and companyName != ''">
           and T2.name LIKE CONCAT('%', #{companyName},'%')
        </if>
        <if test="isTime != null and isTime != ''">
             <![CDATA[and T1.expiration_time != '' and T1.expiration_time <= #{isTime}]]>
          </if>
        <if test="now != null and now != ''">
            <![CDATA[and T1.expiration_time != '' and T1.expiration_time >= #{now}]]>
        </if>
        </where>
        order by T1.id desc
    </select>
    <select id="selectClique" parameterType="java.util.Map" resultType="com.spring.web.ibatis.DynamicParameter">
  	select
  		T1.id, T1.user_id userId, T1.flag, T1.type, T1.report_name reportName, T1.report_time reportTime, 
          T1.expiration_time expirationTime, T1.unit, T1.doc_name docName, T1.doc_url docUrl,
          T1.remark
    from evaluation_tbl T1
    <where>
    	T1.user_id = #{tradeId}
    	<if test="flag != nul and flag != 0">
            and T1.flag = #{flag}
        </if>
        <if test="reportName != null and reportName != ''">
            and T1.report_name LIKE CONCAT('%', #{reportName},'%')
        </if>
        <if test="evaType != null and evaType != ''">
            and T1.type = #{evaType}
        </if>
        <if test="isTime != null and isTime != ''">
             <![CDATA[and T1.expiration_time != '' and T1.expiration_time <= #{isTime}]]>
          </if>
        <if test="now != null and now != ''">
            <![CDATA[and T1.expiration_time != '' and T1.expiration_time >= #{now}]]>
        </if>
    </where>
  </select>
</mapper>